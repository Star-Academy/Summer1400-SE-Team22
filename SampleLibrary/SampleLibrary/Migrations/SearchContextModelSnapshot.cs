// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleLibrary;

namespace SampleLibrary.Migrations
{
    [DbContext(typeof(SearchContext))]
    partial class SearchContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleLibrary.Word", b =>
                {
                    b.Property<string>("WordContent")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("WordContent");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("SampleLibrary.WordInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<string>("WordContent")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("WordContent");

                    b.ToTable("WordInfos");
                });

            modelBuilder.Entity("SampleLibrary.WordInfo", b =>
                {
                    b.HasOne("SampleLibrary.Word", "Word")
                        .WithMany("AllWordOwners")
                        .HasForeignKey("WordContent")
                        .HasConstraintName("FK_WordInfo_Word");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("SampleLibrary.Word", b =>
                {
                    b.Navigation("AllWordOwners");
                });
#pragma warning restore 612, 618
        }
    }
}
